[{"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\index.jsx":"1","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\routes\\index.jsx":"2","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\MainPage\\index.jsx":"3","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\reducers\\winners.js":"4","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\constants\\common.js":"5","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\constants\\winners.js":"6","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\LeaderBoard\\index.jsx":"7","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\actions\\winners.js":"8","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\services\\api-worker\\SettingsApi.js":"9","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\GameProcess\\Menu\\index.jsx":"10","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\LeaderBoard\\ListLeaders\\index.jsx":"11","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\services\\api-worker\\WinnersApi.js":"12","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\services\\api-worker\\Base.js":"13","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\LeaderBoard\\ListLeaders\\style.js":"14","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\GameProcess\\Menu\\MessageWinner\\index.jsx":"15","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\GameProcess\\index.jsx":"16","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\API.js":"17","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\index.js":"18","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\reducers\\index.js":"19","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\services\\dom-worker\\index.js":"20","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\services\\game-worker\\index.js":"21","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\GameProcess\\Menu\\style.js":"22","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\GameProcess\\Menu\\MessageWinner\\style.js":"23"},{"size":472,"mtime":1611436178343,"results":"24","hashOfConfig":"25"},{"size":499,"mtime":1611443015712,"results":"26","hashOfConfig":"25"},{"size":233,"mtime":1611443015712,"results":"27","hashOfConfig":"25"},{"size":648,"mtime":1611439524975,"results":"28","hashOfConfig":"25"},{"size":43,"mtime":1611357406607,"results":"29","hashOfConfig":"25"},{"size":90,"mtime":1611357406607,"results":"30","hashOfConfig":"25"},{"size":816,"mtime":1611443015712,"results":"31","hashOfConfig":"25"},{"size":686,"mtime":1611439902256,"results":"32","hashOfConfig":"25"},{"size":169,"mtime":1611357406591,"results":"33","hashOfConfig":"25"},{"size":3136,"mtime":1611489420201,"results":"34","hashOfConfig":"25"},{"size":1568,"mtime":1611443206529,"results":"35","hashOfConfig":"25"},{"size":674,"mtime":1611357406607,"results":"36","hashOfConfig":"25"},{"size":363,"mtime":1611441220279,"results":"37","hashOfConfig":"25"},{"size":314,"mtime":1611443984195,"results":"38","hashOfConfig":"25"},{"size":398,"mtime":1611490053664,"results":"39","hashOfConfig":"25"},{"size":2318,"mtime":1611443366708,"results":"40","hashOfConfig":"25"},{"size":199,"mtime":1611440410171,"results":"41","hashOfConfig":"25"},{"size":432,"mtime":1611439061545,"results":"42","hashOfConfig":"25"},{"size":128,"mtime":1611437273127,"results":"43","hashOfConfig":"25"},{"size":2292,"mtime":1611357406607,"results":"44","hashOfConfig":"25"},{"size":825,"mtime":1611357406607,"results":"45","hashOfConfig":"25"},{"size":602,"mtime":1611489259880,"results":"46","hashOfConfig":"25"},{"size":201,"mtime":1611489320882,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1vg6ql",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\index.jsx",[],["102","103"],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\routes\\index.jsx",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\MainPage\\index.jsx",["104"],"import React from 'react'\rimport GameProcess from '../GameProcess';\rimport LeaderBoard from '../LeaderBoard';\r\r\rexport default () => {\r\r    return (\r        <>\r            <GameProcess/>\r            <LeaderBoard/>\r        </>\r    )\r}\r","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\reducers\\winners.js",["105"],"import { REQUEST_SENT } from '../constants/common';\r\nimport { WINNERS_FETCH, WINNERS_ADD } from '../constants/winners';\r\n\r\nconst initState = {\r\n\twinners: [],\r\n\tloaded: false,\r\n};\r\n\r\nexport default function (state = initState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_SENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...{\r\n\t\t\t\t\tloaded : false,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tcase WINNERS_FETCH:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...{\r\n\t\t\t\t\twinners: action.data,\r\n\t\t\t\t\tloaded: true,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\r\n\t\tcase WINNERS_ADD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...{\r\n\t\t\t\t\twinners : action.data,\r\n\t\t\t\t\tloaded : true,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\constants\\common.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\constants\\winners.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\LeaderBoard\\index.jsx",["106"],"import React, {useEffect, useState} from 'react';\rimport { useDispatch, useSelector } from 'react-redux'\rimport * as winnersAction from '../../store/actions/winners'\rimport ListLeaders from './ListLeaders';\r\rexport default () => {\r    const dispatch = useDispatch();\r    const winnersState = useSelector(state => state.winners);\r    const { winners, loaded } = winnersState;\r\r    const [growList] = useState(true);\r\r    useEffect(() => {\r        dispatch(winnersAction.getWinners())\r    }, [dispatch]);\r\r    return (\r        <div>\r            <h3>Leader Board</h3>\r            {!loaded\r                ?\r                <div/>\r                :\r                <ListLeaders\r                    fetchWinners={winners}\r                    growList={growList}\r                />\r            }\r        </div>\r    );\r}\r","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\actions\\winners.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\services\\api-worker\\SettingsApi.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\GameProcess\\Menu\\index.jsx",["107"],"import React from 'react';\r\rimport useStyle from './style';\rimport MenuItem from '@material-ui/core/MenuItem';\rimport TextField from \"@material-ui/core/TextField\";\rimport Button from \"@material-ui/core/Button\";\rimport Grow from \"@material-ui/core/Grow\";\rimport MessageWinner from \"./MessageWinner\";\r\rexport default (props) => {\r    const classes = useStyle();\r    const {\r        winner,\r        showMessage,\r        startGame,\r        startGameAgain,\r        handleChangeSelect,\r        handleChangeInput,\r        selectedGameMode,\r        inputUserName,\r        fetchGameMods,\r        growMenu\r    } = props;\r\r    return (\r        <Grow\r            in={growMenu}\r            className={classes.grow}\r            {...{timeout: 2000}}\r        >\r            <div className={classes.menuContainer}>\r                <form className={classes.root} noValidate autoComplete=\"off\">\r                    <div>\r                        <TextField\r                            id=\"outlined-select-currency\"\r                            select\r                            label=\"Game mode\"\r                            value={selectedGameMode}\r                            onChange={handleChangeSelect}\r                            variant=\"outlined\"\r                        >\r                            {\r                                Object.keys(fetchGameMods).map(item => (\r                                    <MenuItem key={item} value={item}>\r                                        {item.split('M')[0]}\r                                    </MenuItem>))\r                            }\r                        </TextField>\r                        <TextField\r                            id=\"outlined-basic\"\r                            label=\"User Name\"\r                            variant=\"outlined\"\r                            value={inputUserName}\r                            onChange={handleChangeInput}\r                        />\r                        {!winner ?\r                            <Button\r                                variant=\"outlined\"\r                                className={classes.btnStart}\r                                onClick={startGame}\r                                disabled={selectedGameMode.length === 0 || inputUserName.length === 0}\r                            >\r                                PLAY\r                            </Button> :\r                            <Button\r                                variant=\"outlined\"\r                                className={classes.btnStart}\r                                onClick={startGameAgain}\r                                disabled={selectedGameMode.length === 0 || inputUserName.length === 0}\r                            >\r                                PLAY AGAIN\r                            </Button>\r                        }\r                    </div>\r                </form>\r                {!showMessage ?\r                    <div/> :\r                    <MessageWinner\r                        winner={winner}\r                        inputUserName={inputUserName}\r                    />\r                }\r            </div>\r        </Grow>\r    )\r}\r","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\LeaderBoard\\ListLeaders\\index.jsx",["108"],"import React from 'react';\rimport List from '@material-ui/core/List';\rimport ListItem from '@material-ui/core/ListItem';\rimport Divider from '@material-ui/core/Divider';\rimport ListItemText from '@material-ui/core/ListItemText';\rimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\rimport Avatar from '@material-ui/core/Avatar';\rimport useStyle from \"./style\";\rimport Grow from \"@material-ui/core/Grow\";\r\rexport default (props) => {\r    const classes = useStyle();\r    const {fetchWinners, growList} = props;\r\r    return (\r        <Grow\r            in={growList}\r            className={classes.grow}\r            {...{timeout: 1000}}\r        >\r            <List className={classes.root}>\r                {fetchWinners\r                    .filter(item => item.winner !== 'Computer')\r                    .reverse()\r                    .filter((item, key) => key < 5)\r                    .map(item => (\r                        <div key={item.id}>\r                            <ListItem alignItems=\"flex-start\">\r                                <ListItemAvatar>\r                                    <Avatar/>\r                                </ListItemAvatar>\r                                <ListItemText\r                                    primary={item.winner}\r                                    secondary={item.date}\r                                />\r                            </ListItem>\r                            <Divider variant=\"inset\" component=\"li\"/>\r                        </div>\r                    ))}\r            </List>\r        </Grow>\r    );\r}\r","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\services\\api-worker\\WinnersApi.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\services\\api-worker\\Base.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\LeaderBoard\\ListLeaders\\style.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\GameProcess\\Menu\\MessageWinner\\index.jsx",["109"],"import React from 'react'\rimport \"./style\";\r\rexport default (props) => {\r    const {winner, inputUserName} = props;\r\r    return (\r        <div className='messageContainer'>\r            <div>\r                { winner === 'user' ?\r                    <span>Won {inputUserName}! :)</span> :\r                    <span>Won Computer! :(</span>\r                }\r            </div>\r        </div>\r    )\r}\r","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\GameProcess\\index.jsx",["110"],"import React, {useEffect, useState} from 'react';\rimport { useDispatch } from 'react-redux';\rimport * as winnerAction from '../../store/actions/winners';\rimport * as Game from '../../services/game-worker';\rimport {clearPlayingField} from '../../services/dom-worker';\rimport SettingsApi from '../../services/api-worker/SettingsApi';\rimport Menu from './Menu';\r\rexport default () => {\r    const dispatch = useDispatch();\r\r    const [selectedGameMode, setSelectedGameMode] = useState('');\r    const [inputUserName, setInputUserName] = useState('');\r    const [fetchGameMods, setFetchGameMods] = useState('');\r    const [growMenu, setGrowMenu] = useState(true);\r    const [winner, setWinner] = useState('');\r    const [showMessage, setShowMessage] = useState(false);\r\r    const startGame = async () => {\r        setGrowMenu(false);\r\r        const res = await Game.play(fetchGameMods[selectedGameMode]);\r        setWinner(res);\r        setShowMessage(true);\r        setGrowMenu(true);\r\r        const payload = {winner: res, userName: inputUserName};\r        dispatch(winnerAction.addWinners(payload))\r    };\r\r    const startGameAgain = async () => {\r        clearPlayingField();\r        await startGame();\r    };\r\r    const handleChangeSelect = event => {\r        setShowMessage(false);\r        setSelectedGameMode(event.target.value);\r    };\r\r    const handleChangeInput = event => {\r        setShowMessage(false);\r        setInputUserName(event.target.value);\r    };\r\r    useEffect(() => {\r        (async function fetchData() {\r            setFetchGameMods(await new SettingsApi().getSettings());\r        })();\r    }, []);\r\r    return (\r        <div>\r            {!fetchGameMods ?\r                <div/> :\r                <Menu\r                    growMenu={growMenu}\r                    fetchGameMods={fetchGameMods}\r                    inputUserName={inputUserName}\r                    selectedGameMode={selectedGameMode}\r                    winner={winner}\r                    showMessage={showMessage}\r\r                    handleChangeSelect={handleChangeSelect}\r                    handleChangeInput={handleChangeInput}\r                    startGame={startGame}\r                    startGameAgain={startGameAgain}\r                />\r            }\r            <div className=\"game-container\"/>\r        </div>\r    )\r}\r","C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\API.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\index.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\store\\reducers\\index.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\services\\dom-worker\\index.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\services\\game-worker\\index.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\GameProcess\\Menu\\style.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\click-game\\src\\components\\GameProcess\\Menu\\MessageWinner\\style.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":6,"column":1,"nodeType":"117","endLine":14,"endColumn":2},{"ruleId":"115","severity":1,"message":"118","line":9,"column":1,"nodeType":"117","endLine":41,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":6,"column":1,"nodeType":"117","endLine":31,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":10,"column":1,"nodeType":"117","endLine":86,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":11,"column":1,"nodeType":"117","endLine":43,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":4,"column":1,"nodeType":"117","endLine":17,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":9,"column":1,"nodeType":"117","endLine":73,"endColumn":2},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","no-global-assign","no-unsafe-negation"]